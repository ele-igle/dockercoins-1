apiVersion: template.openshift.io/v1
kind: Template
metadata: 
  name: template-dockercoins
objects:
  -
    apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata: 
      name: dc-hasher
    spec: 
      replicas: 1
      selector: 
        dockercoins: hasher
      template:
        metadata:
          labels: 
            dockercoins: hasher
        spec:
          containers:
            -
              args:
                -
                  hasher.rb
              command:
                -
                  ruby
              env:
                - name: TOKEN
                  value: hola que tal
                - name: LANG 
                  value: C.UTF-8
                - name: GEM_HOME
                  value: /usr/local/bundle
                - name: BUNDLE_SILENCE_ROOT_WARNING
                  value: "1"
                - name: BUNDLE_APP_CONFIG
                  value: /usr/local/bundle
                - name: PATH
                  value: /usr/local/bundle/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
              image: ${IMAGE_HASHER}
              name: container-po-hasher
              ports:
                -
                  containerPort: 8081
                  protocol: TCP
              volumeMounts:
                -
                  mountPath: /hasher/hasher.rb
                  name: volume-po-hasher
                  readOnly: true
                  subPath: hasher.rb
              workingDir: /hasher/
          volumes:
            -
              name: volume-po-hasher
              secret:
                defaultMode: 0400
                items:
                  -
                    key: hasher.rb
                    mode: 0400
                    path: hasher.rb
                secretName: secret-hasher
  -
    apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata: 
      name: dc-webui
    spec: 
      replicas: 1
      selector: 
        dockercoins: webui
      template:
        metadata:
          labels: 
            dockercoins: webui
        spec:
          containers:
            -
              args:
                -
                  webui.js
              command:
                -
                  node
              env:
                -
                  name: TOKEN
                  value: hola que tal
              image: eleigle/node:express-redis
              name: container
              ports:
                -
                  containerPort: 8080
                  protocol: TCP
              volumeMounts:
                -
                  mountPath: /app/webui.js
                  name: volume
                  readOnly: true
                  subPath: webui.js
                - mountPath: /app/files/
                  name: volume-files
                  readOnly: true
              workingDir: /app/
          initContainers:
            - args:
                - git clone https://github.com/fav1c0n/dockercoins.git --single-branch -b 2022-03-santander; cp -r ./dockercoins/webui/files/* /app/files/
              command:
                - sh
                - -c
              env:
                - name: TOKEN
                  value: hola que tal
              image: alpine/git:latest
              name: git-container
              volumeMounts:
                - mountPath: /app/files/
                  name: volume-files
                  readOnly: false
                - mountPath: /tmp/
                  name: volume-temporal
                  readOnly: false
              workingDir: /tmp/
          volumes:
            - name: volume
              secret:
                defaultMode: 0400
                items:
                  -
                    key: webui.js
                    mode: 0400
                    path: webui.js
                secretName: secret-webui
            - name: volume-files
              emptyDir:
                medium: Memory
                sizeLimit: 1Mi
            - name: volume-temporal
              emptyDir:
                medium: Memory
                sizeLimit: 1Mi
  -
    apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:  
      name: dc-worker
    spec: 
      replicas: 1
      selector: 
        dockercoins: worker
      template:
        metadata:
          labels: 
            dockercoins: worker
        spec:
          containers:
            -
              args:
                -
                  worker.py
              command:
                -
                  python
              env:
                -
                  name: TOKEN
                  value: hola que tal
              image: eleigle/python:Redis-requests
              name: container
              volumeMounts:
                -
                  mountPath: /worker/worker.py
                  name: volume
                  readOnly: true
                  subPath: worker.py
              workingDir: /worker/
          volumes:
            -
              name: volume
              secret:
                defaultMode: 0400
                items:
                  -
                    key: worker.py
                    mode: 0400
                    path: worker.py
                secretName: secret-worker
  -
    apiVersion: apps/v1
    kind: DaemonSet
    metadata: 
      name: ds-rng
    spec: 
      selector: 
        matchLabels:
          dockercoins: rng
      template:
        metadata:
          labels: 
            dockercoins: rng
        spec:
          containers:
            -
              args:
                -
                  rng.py
              command:
                -
                  python
              env:
                -
                  name: TOKEN
                  value: hola que tal
              image: eleigle/python:Flask
              name: container
              ports:
                -
                  containerPort: 8081
                  protocol: TCP
              volumeMounts:
                -
                  mountPath: /rng/rng.py
                  name: volume
                  readOnly: true
                  subPath: rng.py
              workingDir: /rng/
          volumes:
            -
              name: volume
              secret:
                defaultMode: 0400
                items:
                  -
                    key: rng.py
                    mode: 0400
                    path: rng.py
                secretName: secret-rng
                
parameters:
  -
    name: IMAGE_HASHER
    value: fav1c0n/ruby:sinatra-thin
